# Generated by Django 5.2.3 on 2025-10-21 21:40

from django.db import migrations


def create_email_preferences_for_existing_users(apps, schema_editor):
    """
    Create EmailPreferences for all existing users who don't have one.

    This is a one-time data migration to backfill EmailPreferences
    for users created before the signal was added.

    Note: We need to generate unique tokens manually since migrations
    don't trigger the model's save() method.
    """
    import secrets
    User = apps.get_model('auth', 'User')
    EmailPreferences = apps.get_model('prompts', 'EmailPreferences')

    # Find users without EmailPreferences
    users_without_prefs = User.objects.filter(email_preferences__isnull=True)
    count = users_without_prefs.count()

    # Create preferences for each user with unique tokens
    created_count = 0
    for user in users_without_prefs:
        # Generate unique token (same as model's save() method)
        token = secrets.token_urlsafe(48)
        EmailPreferences.objects.create(user=user, unsubscribe_token=token)
        created_count += 1

    if count > 0:
        print(f"✅ Created EmailPreferences for {created_count} existing users")
    else:
        print("✅ All users already have EmailPreferences")


class Migration(migrations.Migration):

    dependencies = [
        ('prompts', '0030_emailpreferences'),
    ]

    operations = [
        migrations.RunPython(
            create_email_preferences_for_existing_users,
            reverse_code=migrations.RunPython.noop
        ),
    ]
